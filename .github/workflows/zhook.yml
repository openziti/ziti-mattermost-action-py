name: mattermost-ziti-webhook
on:
  issues:
  issue_comment:
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
  pull_request:
    types: [opened, reopened]
  push:
  fork:
  release:
    types: [released]
  workflow_dispatch:
  watch:
    types: [started]

jobs:
  mattermost-ziti-webhook:
    runs-on: ubuntu-24.04
    name: POST Webhook
    steps:
      - name: Debug Environment
        uses: hmarr/debug-action@v3

      - name: Install Debug Tools
        shell: bash
        run: sudo apt-get install --yes valgrind gdb

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Python Script Directly
        if: |
          github.repository_owner == 'openziti'
          && ((github.event_name != 'pull_request_review')
          || (github.event_name == 'pull_request_review' && github.event.review.state == 'approved'))
        env:
          INPUT_ZITIID: ${{ secrets.ZITI_MATTERMOST_IDENTITY }}
          INPUT_WEBHOOKURL: ${{ secrets.ZHOOK_URL_DEV_NOTIFICATIONS }}
          INPUT_EVENTJSON: ${{ toJson(github.event) }}
          INPUT_SENDERUSERNAME: GitHubZ
          INPUT_SENDERICONURL: https://github.com/fluidicon.png
          INPUT_ZITILOGLEVEL: 6
        shell: bash
        run: |
          set -o pipefail
          set -o xtrace
          pip install --user --upgrade --requirement ./requirements.txt
          sudo mkdir -m0777 ${{ github.workspace }}/cores
          sudo sysctl -w kernel.core_pattern='${{ github.workspace }}/cores/core.%e.%p.%t'
          ulimit -c unlimited
          valgrind --verbose --log-file=/tmp/zook.py-valgrind-%p-%n.log --leak-check=full python ./zhook.py

      - name: Run as Docker Action with Core Dumps
        if: |
          github.repository_owner == 'openziti'
          && ((github.event_name != 'pull_request_review')
          || (github.event_name == 'pull_request_review' && github.event.review.state == 'approved'))
        shell: bash
        run: |
          set -o pipefail
          set -o xtrace
          docker build -t zhook-action .
          docker run --rm \
            -v "${{ github.workspace }}:${{ github.workspace }}" \
            -w "${{ github.workspace }}" \
            -e INPUT_ZITIID="${{ secrets.ZITI_MATTERMOST_IDENTITY }}" \
            -e INPUT_WEBHOOKURL="${{ secrets.ZHOOK_URL_DEV_NOTIFICATIONS }}" \
            -e INPUT_EVENTJSON='${{ toJson(github.event) }}' \
            -e INPUT_SENDERUSERNAME="GitHubZ" \
            -e INPUT_ZITILOGLEVEL="6" \
            --entrypoint /bin/sh \
            zhook-action -xc "
              ulimit -c unlimited
              exec /app/zhook.py
            "

      - uses: ./
        name: Run as a GH Action from the Local Checkout
        if: |
          github.repository_owner == 'openziti'
          && ((github.event_name != 'pull_request_review')
          || (github.event_name == 'pull_request_review' && github.event.review.state == 'approved'))
        with:
          zitiId: ${{ secrets.ZITI_MATTERMOST_IDENTITY }}
          webhookUrl: ${{ secrets.ZHOOK_URL_DEV_NOTIFICATIONS }}
          eventJson: ${{ toJson(github.event) }}
          senderUsername: GitHubZ
          zitiLogLevel: 6

      - name: Print Debug Info
        if: always()
        shell: bash
        run: |
          set -o xtrace
          set +o errexit
          echo "DEBUG: PYTHONPATH=${PYTHONPATH:-}"
          echo "DEBUG: PATH=${PATH:-}"
          echo "DEBUG: LD_LIBRARY_PATH=${LD_LIBRARY_PATH:-}"
          find $(python -c "import site; print(site.USER_SITE)") -path "*/openziti*" -name "*.so*" -type f -print0 | xargs -0r ldd
          cat /tmp/zook.py-valgrind-*.log
          for CORE in ${{ github.workspace }}/cores/core.*; do
            if [ -s "$CORE" ]; then
              echo "DEBUG: Core dump found: $CORE"
              EXECUTABLE=$(basename "$CORE" | cut -d. -f2)
              gdb -q $(realpath $(which "$EXECUTABLE")) -c "$CORE" --ex bt --ex exit
            fi
          done